#
# ~/.bashrc_case/bash_functions
#


# extract - extract files. Ignore files with improper extensions.
# Usage: extract file.zip [file2.bz2 ..]
extract () {
    local x
    # echo and execute
    ee() {
        echo "$@"
        $1 "$2"
    }
    for x in "$@"; do
        [[ -f $x ]] || continue
        case "$x" in
            *.tar.bz2 | *.tbz2 )    ee "tar xvjf" "$x"  ;;
            *.tar.gz | *.tgz )      ee "tar xvzf" "$x"  ;;
            *.bz2 )                 ee "bunzip2" "$x"   ;;
            *.rar )                 ee "unrar x" "$x"   ;;
            *.gz )                  ee "gunzip" "$x"    ;;
            *.tar )                 ee "tar xvf" "$x"   ;;
            *.zip )                 ee "unzip" "$x"     ;;
            *.Z )                   ee "uncompress" "$x";;
            *.7z )                  ee "7z x" "$x"      ;;
        esac
    done
}


# history-cleanup - removes duoble entries from the history file
# usage: history-cleanup
history-cleanup() {
    /bin/cp ~/.bash_history ~/.bash_history.$(date +%Y%m%dT%H%M%S)
    grep -vP "^(h|history) -d \d+" ~/.bash_history | tac | awk "!x[\$0]++" | tac > ~/.bash-history
    [[ -f ~/.bash-history ]] && mv ~/.bash-history ~/.bash_history
}


# mc - Create and change to new directory
# usage: mcd DIRECTORY_NAME
mcd () {
    # Create a directory and than change to it
    # e.g. mcd ~/demodir
    #      creates a ~/demodir directory and change to it
    [[ -z "$1" ]] && echo "usage: mcd <directory>" && return
    mkdir -p $1
    if [[ -d $1 ]]; then
        cd $1
    else
        error "ERROR: mcd: $1: directory not created!"
    fi
}


ccd() {
    # concatenate names and change to that directory
    # e.g. ccd /home heiko data
    #      this will change directory to /home/heiko/data
    #      equal to ccd ~ data
    local targetdir=
    for item in "$@"; do
        if [[ -z ${targetdir} ]]; then
            targetdir=${item}
        else
            targetdir=${targetdir}/${item}
        fi
    done
    if [[ -d "${targetdir}" ]]; then
        cd "${targetdir}"
    else
        echo "ERROR: ccd: ${targetdir}: directory not found!"
    fi
}

# vim: set filetype=bash:
